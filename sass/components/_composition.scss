.composition {

    position: relative;//Required to position child element.

    &__photo {
        width: 55%;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .4);
        border-radius: 2px;
        position: absolute;//This positions this element according to parent position.
        z-index: 10;//Lower z-index
        transition: all .2s;
        outline-offset: 2rem;//Space between outline and image here.

        @include respond(tab-port) {
            float: left;
            position: relative;//For float to work we are putting relative position
            width: 33.33333%;//Redicing image width for smaller screens.
            box-shadow: 0 1.5rem 3rem rgba($color-black, .2);//Redicing intensity of blur for smaller screens.
        }

        &--p1 {
            left: 0;//Sets it to start from left corner.
            top: -2rem;
            
            @include respond(tab-port) {
                top: 0;
                transform: scale(1.2);//2nd largest picture in smaller screens
            }//FIxing photo to top in smaller screens. So they appear side by side
        }

        &--p2 {
            right: 0;//Sets it to start from right corner.
            top: 2rem;

            @include respond(tab-port) {
                top: -1rem;//Moving this pic a little up to give illusion of being on top
                transform: scale(1.3);//Making this pic a little larger in smaller screens(Illusion).
                z-index: 100;//Higher z-index so it looks like its above the other screens even better.
            }//Fixing photos to top in smaller screens. So they appear side by side
        }

        &--p3 {
            left: 20%;
            top: 10rem;

            @include respond(tab-port) {
                top: 1rem;//MOving this pic a little down to give illusion of being at the last of the 3 pics
                left: 0;
                transform: scale(1.1);//Making this pic the smallest among the 3 images in smaller screens.
            }//Fixing photo-3 to top in smaller screens and putting it to the left end. This makes it appear side by side with the other 2 pics.
        }

        &:hover {
            outline: 1.2rem solid $color-secondary-light;//Similar to border, but we can have an offset for this. Basically space between border and element.
            transform: scale(1.05) translateY(-.5rem);//Increases size and pushes the hovered over image.
            box-shadow: 0 2.5rem 4rem rgba($color-black, .5);
            z-index: 20;//Higher z-index so appears before lower one.

            @include respond(tab-port) {
                transform: scale(1.6) translateY(-.5rem);
                z-index: 40;
            }
        }
    }

    &:hover &__photo:not(:hover) {
        transform: scale(0.95);

        @include respond(tab-port) {
            transform: scale(1.1);
            z-index: 10;
        }
    }//Basically here we are selecting hover of composition, then selects all the photos that are not hovered over.
}